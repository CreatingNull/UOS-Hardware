ci:
    skip: [pylint-local]

repos:

-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    -   id: check-yaml
    -   id: check-toml
    -   id: end-of-file-fixer
    -   id: trailing-whitespace
    -   id: check-added-large-files
    -   id: fix-byte-order-marker
    -   id: check-docstring-first
    -   id: mixed-line-ending
    -   id: check-case-conflict
    -   id: check-ast

# Updating code to use modern python patterns where available.
-   repo: https://github.com/asottile/pyupgrade
    rev: v3.3.1
    hooks:
    -   id: pyupgrade

# General Project code formatter.
-   repo: https://github.com/psf/black
    rev: 22.12.0
    hooks:
    -   id: black

# Sorts python imports.
-   repo: https://github.com/PyCQA/isort
    # Note - on black update blacken-docs pin should also be updated.
    rev: 5.11.4
    hooks:
    -   id: isort
        args: ['--profile=black']

# Formats python docstrings.
-   repo: https://github.com/PyCQA/docformatter
    rev: v1.5.1
    hooks:
    -   id: docformatter

# Formats code-blocks in documentation.
-   repo: https://github.com/asottile/blacken-docs
    rev: v1.12.1
    hooks:
    -   id: blacken-docs
        # Note - on black update blacken-docs pin should also be updated.
        additional_dependencies: ['black==22.8.0']

# Used to detect unintentionally unused code.
-   repo: https://github.com/asottile/dead
    rev: v1.5.0
    hooks:
    -   id: dead
        args: [
            '--exclude=conf.py'  # Ignore the sphinx config as this is used by an external tool.
        ]

# Lint code using libs in project venv.
-   repo: local
    hooks:
    # Pylint is run as local hook to make use of the repo venv.
    -   id: pylint-local
        name: pylint-local
        entry: pylint
        language: system
        types: [ python ]
        args: [
            '--ignore=conf.py',  # Ignore the sphinx config as this is used by an external tool.
        ]
        require_serial: true

# Lint code in pre-commit env, note: This ignores import checks.
-   repo: https://github.com/PyCQA/pylint
    rev: v2.15.9
    hooks:
    # Pylint is also run from within pre-commit for CI purposes.
    -   id: pylint
        args: [
            '--disable=E0401',  # Ignore imports when not running in a local env.
            '--ignore=conf.py',  # Ignore the sphinx config as this is used by an external tool.
        ]

# Lint code for security flaws.
-   repo: https://github.com/PyCQA/bandit
    rev: 1.7.4
    hooks:
    -   id: bandit
        # Assert is used exclusively in pytest.
        args: ['--skip=B101']

# Lint documentation source.
-   repo: https://github.com/sphinx-contrib/sphinx-lint
    # Make sure to also update the additional dependency pin
    rev: v0.6.7
    hooks:
    -   id: sphinx-lint

# lint documentation
-   repo: https://github.com/PyCQA/doc8
    rev: v1.1.1
    hooks:
    -   id: doc8

# Lint docstrings.
-   repo: https://github.com/PyCQA/pydocstyle
    # Waiting for a 3.10 release on pypi
    rev: "6.1.1"
    hooks:
    -   id: pydocstyle
        additional_dependencies:
            # TOML support only added natively in python 3.11
            - toml

# Static typehint linting.
-   repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.991
    hooks:
    -   id: mypy
